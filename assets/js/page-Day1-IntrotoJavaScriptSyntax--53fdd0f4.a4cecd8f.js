(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{481:function(a,e,t){"use strict";t.r(e);var s=t(2),o=Object(s.a)({},(function(){var a=this,e=a.$createElement,t=a._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"day-1-intro-to-javascript-syntax"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#day-1-intro-to-javascript-syntax"}},[a._v("#")]),a._v(" Day 1 - Intro to JavaScript Syntax")]),a._v(" "),t("h2",{attrs:{id:"daily-journal"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#daily-journal"}},[a._v("#")]),a._v(" Daily Journal")]),a._v(" "),t("p",[a._v("Read Intro to JS > Var, let and const and answer the following questions")]),a._v(" "),t("h2",{attrs:{id:"what-is-scope"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#what-is-scope"}},[a._v("#")]),a._v(" What is Scope ?")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[a._v("Scope is the location where variables can be accessed. Like global scope can be used anywhere, local scope means it can be used within the function and block scope is a variable can be used within {}.\n")])])]),t("h2",{attrs:{id:"what-is-hoisting"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#what-is-hoisting"}},[a._v("#")]),a._v(" What is Hoisting?")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[a._v("Hoisting in JavaScript is pushing variables and declarations to the top of their respective scopes before other code is executed.\n")])])]),t("h2",{attrs:{id:"in-what-cases-might-you-use-let-vs-const-vs-var"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#in-what-cases-might-you-use-let-vs-const-vs-var"}},[a._v("#")]),a._v(" In what cases might you use let vs const vs var?")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[a._v("Uses of let would be used inside a block of code where a variable could be changed. Whereas const is a variable that is never changed by other code. We can only change the contents of a constant object. You would use var in cases where you would need a global variable or a function variable.\n")])])]),t("h2",{attrs:{id:"afternoon-challenge"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#afternoon-challenge"}},[a._v("#")]),a._v(" Afternoon Challenge")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[a._v("https://kpohiostyle.github.io/js-tests-basics/")])])])])}),[],!1,null,null,null);e.default=o.exports}}]);